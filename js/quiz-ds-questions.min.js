let questions=[{numb:1,question:"Which of the following points is/are true about Linked List data structure when it is compared with array?",answer:"All of the above.",options:["Arrays have better cache locality that can make them better in terms of performance.","It is easy to insert and delete elements in Linked List.","Random access is not allowed in a typical implementation of Linked Lists","All of the above."]},{numb:2,question:" Assume that reference of head of following doubly linked list is passed to above function 1 <--> 2 <--> 3 <--> 4 <--> 5 <-->6. What should be the modified linked list after the function call?",answer:"6 <--> 5 <--> 4 <--> 3 <--> 2 <--> 1",options:["2 <--> 1 <--> 4 <--> 3 <--> 6 <-->5","\t5 <--> 4 <--> 3 <--> 2 <--> 1 <-->6","6 <--> 5 <--> 4 <--> 3 <--> 2 <--> 1","6 <--> 5 <--> 4 <--> 3 <--> 1 <--> 2"]},{numb:3,question:" Which of the following sorting algorithms can be used to sort a random linked list with minimum time complexity?",answer:"Merge Sort",options:["Quick Sort","Insertion Sort","Merge Sort","Heap Sort"]},{numb:4,question:"In the worst case, the number of comparisons needed to search a singly linked list of length n for a given element is (GATE CS 2002)",answer:"n",options:["n","\tn/2","log 2 n â€“ 1","\tlog 2 n"]},{numb:5,question:"Suppose each set is represented as a linked list with elements in arbitrary order. Which of the operations among union, intersection, membership, cardinality will be the slowest? (GATE CS 2004)",answer:"union, intersection",options:["union, intersection","membership, cardinality","intersection, membership","union only"]}];